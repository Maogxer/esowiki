---
import { ESO_API_URL } from "@/consts";
import { md2html, md2text } from "@/utils";
import ArticleLayout from "@/layouts/ArticleLayout.astro";

const { slug } = Astro.params;

async function getBuff(slug: string) {
  const query = new URLSearchParams();
  query.set("pagination[pageSize]", "1");
  query.set("pagination[page]", "1");
  query.set("filters[$or][0][name][$eq]", slug!);
  query.set("filters[$or][1][slug][$eq]", slug!);
  query.set("populate", "*");

  const response = await fetch(`${ESO_API_URL}/api/buffs?${query}`);
  const result = await response.json();
  return result?.data[0];
}

const data = await getBuff(slug!);

if (data == null) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const typeMap: [string, string][] = [
  ["Buff", "增益"],
  ["Debuff", "减益"],
  ["Miscellaneous", "杂项"],
  ["Quest Related", "任务相关"],
];

const type = typeMap.find((item) => item[0] === data.attributes.type)?.[1];

const meta = [
  { name: "名称", content: data.attributes.name },
  { name: "英文", content: data.attributes.nameEn },
  { name: "类型", content: type },
  {
    name: "",
    content: `<img src="${data.attributes.thumb}" width="64" height="64" alt="" />`,
  },
];
---

<ArticleLayout
  name={data.attributes.name}
  nameEn={data.attributes.nameEn}
  description={md2text(data.attributes.description)}
  type="增益/减益"
  meta={meta}
>
  <Fragment
    set:html={md2html(
      `**${data.attributes.name}**是上古卷轴OL的一个[增益/减益](/buff)。`
    )}
  />
  <Fragment set:html={md2html(data.attributes.content)} />

  {
    data.attributes.sets.data.length > 0 && (
      <Fragment>
        <h3>能提供{data.attributes.name}效果的套装</h3>
        <ul>
          {data.attributes.sets.data.map((x: any) => (
            <li>
              <img
                class="inline-flex"
                src={x.attributes.icon}
                width="32"
                height="32"
                alt=""
              />
              <a href={`/set/${x.attributes.slug}`}>{x.attributes.name}</a>
            </li>
          ))}
        </ul>
      </Fragment>
    )
  }
</ArticleLayout>
