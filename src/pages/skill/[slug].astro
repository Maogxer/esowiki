---
import { ESO_API_URL } from "@/consts";
import ArticleLayout from "@/layouts/ArticleLayout.astro";
import { md2html, md2text } from "@/utils";

const { slug } = Astro.params;

const query = new URLSearchParams();
query.set("pagination[pageSize]", "1");
query.set("pagination[page]", "1");
query.set("filters[slug][$eq]", slug!);

const response = await fetch(`${ESO_API_URL}/api/skills?${query}`);

const { data } = await response.json();

// 当请求 tooltip 的时候，返回 json 数据
if (Astro.request.headers.get("x-request-for") === "tooltip") {
  if (data == null || data.length === 0) {
    return new Response(JSON.stringify({}), {
      headers: {
        "content-type": "application/json",
      },
    });
  }

  const { attributes } = data[0];
  const description = attributes.description || "";
  const result = {
    name: attributes.name,
    nameEn: attributes.nameEn,
    icon: attributes.icon,
    target: attributes.target,
    cost: attributes.cost,
    skillTypeName: attributes.skillTypeName,
    morph: attributes.morph,
    baseName: attributes.baseName,
    radius: attributes.radius / 100,
    maxRange: attributes.maxRange / 100,
    duration: attributes.duration / 1000,
    castTime: attributes.castTime / 1000,
    description: description
      .split("\n")
      .filter(Boolean)
      .map((x: string) => `<p>${x}</p>`)
      .join("\n"),
    effectLines: attributes.effectLines,
  };

  return new Response(JSON.stringify(result), {
    headers: {
      "content-type": "application/json",
    },
  });
}

if (data == null || data.length === 0) {
  return Astro.redirect("/404");
}

const { attributes } = data[0];

const meta = [
  { name: "名称", content: attributes.name },
  { name: "英文", content: attributes.nameEn },
  { name: "类型", content: attributes.skillType },
  { name: "技能线", content: attributes.skillLine },
  {
    name: "图标",
    content: `<img width="32" height="32" alt="" src=${attributes.icon} />`,
  },
];
---

<ArticleLayout
  name={attributes.name}
  nameEn={attributes.nameEn}
  description={md2text(data.attributes.description)}
  type="技能"
  meta={meta}
>
  <p>
    {attributes.name}是上古卷轴 OL 的一个<a href="/skill">技能</a>。
  </p>
  <Fragment set:html={md2html(attributes.description)} />
  <Fragment set:html={md2html(attributes.content)} />
</ArticleLayout>
