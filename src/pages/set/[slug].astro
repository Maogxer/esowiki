---
import { ESO_API_URL, CDN_URL } from "@/consts";
import ArticleLayout from "@/layouts/ArticleLayout.astro";
import _ from "lodash";

const { slug } = Astro.params;

const query = new URLSearchParams();
query.set("pagination[pageSize]", "1");
query.set("pagination[page]", "1");
query.set("filters[slug][$eq]", slug!);
query.set("populate", "*");

const response = await fetch(`${ESO_API_URL}/api/set-summaries?${query}`);

const { data } = await response.json();

// 当请求 tooltip 的时候，返回 json 数据
if (Astro.request.headers.get("x-request-for") === "tooltip") {
  if (data == null || data.length === 0) {
    return new Response(JSON.stringify({}), {
      headers: {
        "content-type": "application/json",
      },
    });
  }

  const { attributes } = data[0];
  const result = {
    name: attributes.name,
    nameEn: attributes.nameEn,
    icon: attributes.icon,
    type: attributes.type,
    description: Array(7)
      .fill(0)
      .map((_, i) => attributes[`setBonusDesc${i + 1}`])
      .filter(Boolean)
      .join("<br>"),
  };

  return new Response(JSON.stringify(result), {
    headers: {
      "content-type": "application/json",
    },
  });
}

if (data == null || data.length === 0) {
  return Astro.redirect("/404");
}

const { attributes } = data[0];

const items = _.uniqBy(attributes.items.data, "attributes.name");

const meta = [
  { name: "名称", content: attributes.name },
  { name: "英文", content: attributes.nameEn },
  {
    name: "类型",
    content: `<a href="/set?type=${attributes.type}">${attributes.type}</a>`,
  },
  { name: "部件数量", content: items.length },
  { name: "地点", content: attributes.location },
  { name: "套装部位", content: attributes.itemSlots },
];
---

<ArticleLayout
  name={attributes.name}
  nameEn={attributes.nameEn}
  description={`${attributes.name}是上古卷轴 OL 的一套${attributes.type}套装，套装共包含 ${items.length} 个部件。`}
  type="套装"
  meta={meta}
>
  <p>
    <abbr title={attributes.nameEn}>{attributes.name}</abbr>是上古卷轴 OL 的一套<a
      href={`/set?type=${attributes.type}`}>{attributes.type}</a
    >套装，可以在 {attributes.location ?? "?"} 区域获得。
  </p>
  <h3>套装效果</h3>
  <ul>
    {
      Array(7)
        .fill(0)
        .map((_, i) => attributes[`setBonusDesc${i + 1}`])
        .filter(Boolean)
        .map((x) => <li>{x}</li>)
    }
  </ul>

  {
    attributes.type === "地图" && (
      <>
        <h3>掉落机制</h3>
        <ul>
          <li>洞穴Boss掉落腰带或足部。</li>
          <li>世界Boss掉落头部、胸部、腿部或武器。</li>
          <li>公开地牢Boss掉落肩部、手部或武器。</li>
          <li>
            <a href="/worldevent">世界事件</a>和宝箱掉落珠宝（戒指或项链）。
          </li>
          <li>区域宝箱掉落任一部位。</li>
          <li>藏宝图挖掘出的宝箱掉落任一部位。</li>
          <li>普通怪物掉落任一部位（概率极低）。</li>
          <li>完成区域故事任务奖励。</li>
        </ul>
        <p>
          掉落的物品范围从 <span class="text-fine">优质</span> 到
          <span class="text-epic">史诗</span> 品质，而
          <span class="text-legendary">传奇</span>
          品质的物品必须通过制造台升级或从黄金商人
          <a href="/npc/adhazabi-aba-daro">阿哈扎比·阿巴·达萝</a> 购买获得。
        </p>
      </>
    )
  }

  {
    attributes.type === "地牢" && (
      <>
        <h3>掉落机制</h3>
        <ul>
          <li>小Boss掉落手部、腰带或者鞋子。</li>
          <li>Boss掉落胸部、肩部、头部或腿部。</li>
          <li>最终Boss掉落武器或珠宝（戒指或项链）。</li>
          <li>
            普通模式掉落<span class="text-superior">上等</span>品质物品。
          </li>
          <li>
            老兵模式掉落<span class="text-epic">史诗</span>品质物品。
          </li>
        </ul>
      </>
    )
  }

  {
    attributes.type === "试炼" && (
      <>
        <h3>掉落机制</h3>
        <ul>
          <li>
            普通模式小怪和Boss掉落<span class="text-superior">上等</span>
            品质物品。
          </li>
          <li>
            老兵模式小怪和Boss掉落<span class="text-epic">史诗</span>品质物品。
          </li>
          <li>最终Boss掉落武器或盾牌之一。</li>
          <li>
            老兵困难模式掉落完美武器和<span class="text-legendary">传奇</span>
            品质珠宝。
          </li>
          <li>
            与试炼相关的任务奖励容器将掉落一件珠宝、一把武器或盾牌，但这些在捡起时会绑定。
          </li>
          <li>宝箱有轻微的几率掉落护甲。</li>
        </ul>
      </>
    )
  }

  <h3>套装部件</h3>
  <p>
    {attributes.name}套装共包含 <code>{items.length}</code> 个部件：
    <div class="flex gap-1 flex-wrap mt-5">
      {
        items.map((x: any) => (
          <a href={`/item/${x.id}`}>
            <img
              class="hover:shadow-lg transition-shadow duration-450 ease-in-out"
              width="64"
              height="64"
              alt={x.attributes.name}
              src={x.attributes.icon}
            />
          </a>
        ))
      }
    </div>
  </p>
</ArticleLayout>
