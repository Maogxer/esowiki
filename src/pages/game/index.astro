---
import { SITE_DESCRIPTION, CDN_URL, ESO_API_URL } from "@/consts";
import ListLayout from "@/layouts/ListLayout.astro";

let page = Astro.url.searchParams.get("page") || "1";

if (!/^\d+$/.test(page)) {
  page = "1";
}

/** 分类 */
async function getType(slug?: string) {
  const query = new URLSearchParams();
  query.set("pagination[pageSize]", "1");
  query.set("pagination[page]", "1");
  query.set("filters[slug][$eq]", slug!);

  const response = await fetch(`${ESO_API_URL}/api/article-types?${query}`);
  const result = await response.json();

  return result.data[0];
}

/** 文章 */
async function getArticles(type: string) {
  const query = new URLSearchParams();
  query.set("pagination[pageSize]", "20");
  query.set("pagination[page]", page as string);
  query.set("filters[type][id][$eq]", type);
  query.set("populate", "*");
  query.set("sort[0]", "id:desc");

  const response = await fetch(`${ESO_API_URL}/api/articles?${query}`);
  return await response.json();
}

const typeData = await getType("game");

if (typeData == null) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const { data: articles } = await getArticles(typeData.id);
---

<ListLayout
  name={typeData.attributes.name}
  nameEn={typeData.attributes.nameEn}
  description={SITE_DESCRIPTION}
>
  <p>{typeData.attributes.description}</p>
  <ul>
    {
      articles.map((article: any) => (
        <li>
          <a href={`/${typeData.attributes.slug}/${article.attributes.slug}`}>
            {article.attributes.title}
          </a>
        </li>
      ))
    }
  </ul>
</ListLayout>
