---
import { ESO_API_URL } from "@/consts";
import { md2html, md2text, formatDateTime, formatDate } from "@/utils";
import ArticleLayout from "@/layouts/ArticleLayout.astro";

const { name } = Astro.params;

async function getPost() {
  const query = new URLSearchParams();
  query.set("populate[0]", "categories");
  query.set("populate[1]", "meta");

  const response = await fetch(`${ESO_API_URL}/api/posts/${name}?${query}`);
  return await response.json();
}

function createTime(datatime: any) {
  const formated = formatDateTime(datatime);
  return `<time class="text-gray-900 text-sm mr-4" datetime="${datatime}" title="${formated}">${formatDate(
    datatime
  )}</time>`;
}

const { data } = await getPost();

if (data == null) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const meta = [
  {
    name: "名称",
    content: `<span style="color:${data.attributes.color}">${data.attributes.name}</span>`,
  },
  {
    name: "英文",
    content: `<span style="color:${data.attributes.color}">${data.attributes.nameEn}</span>`,
  },
];

if (data.attributes.categories.data.length > 0) {
  meta.push({
    name: "分类",
    content: data.attributes.categories.data
      .map(
        (category: any) =>
          `<a href="/wiki/${category.attributes.name}">${category.attributes.name}</a>`
      )
      .join(", "),
  });
}

if (data.attributes.meta.length > 0) {
  data.attributes.meta.forEach(({ key, value, type }: any) => {
    let content = value;

    switch (type) {
      case "markdown":
        content = md2html(value);
        break;
      case "boolean":
        content = value ? "是" : "否";
        break;
      case "url":
        content = `<a href="${value}" target="_blank">${value}</a>`;
        break;
      case "wiki":
        content = `<a href="/wiki/${value}">${value}</a>`;
        break;
      default:
        break;
    }

    meta.push({
      name: key,
      content: content,
    });
  });
}

meta.push({
  name: "创建时间",
  content: createTime(data.attributes.createdAt),
});
meta.push({
  name: "更新时间",
  content: createTime(data.attributes.updatedAt),
});
---

<ArticleLayout
  name={data.attributes.name}
  nameEn={data.attributes.nameEn}
  description={md2text(data.attributes.description)}
  type="页面"
  meta={meta}
>
  <Fragment set:html={md2html(data.attributes.content)} />
</ArticleLayout>
