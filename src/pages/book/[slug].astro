---
import { ESO_API_URL } from "@/consts";
import { md2html, md2text } from "@/utils";
import ArticleLayout from "@/layouts/ArticleLayout.astro";

const { slug } = Astro.params;

/** 书籍 */
async function getBook() {
  const query = new URLSearchParams();
  query.set("pagination[pageSize]", "1");
  query.set("pagination[page]", "1");
  query.set("filters[$or][0][title][$eq]", slug!);
  query.set("filters[$or][1][slug][$eq]", slug!);
  query.set("populate[builds][populate]", "*");

  const response = await fetch(`${ESO_API_URL}/api/books?${query}`);
  const result = await response.json();
  return result?.data[0];
}

const data = await getBook();

if (data == null) {
  return new Response(null, {
    status: 404,
    statusText: "Not found",
  });
}

const meta = [
  { name: "名称", content: data.attributes.title },
  { name: "英文", content: data.attributes.titleEn },
  { name: "传说书籍", content: data.attributes.isLore ? "是" : "否" },
  { name: "技能", content: data.attributes.skill },
  { name: "封面", content: data.attributes.mediumIndex },
].filter((item) => item.content != null && item.content !== "");
---

<ArticleLayout
  name={data.attributes.title}
  nameEn={data.attributes.titleEn}
  description={md2text(data.attributes.body).substring(0, 100)}
  type="书籍"
  meta={meta}
  search="/book/list"
>
  {
    data.attributes.icon && (
      <img
        class="float-right ml-4"
        src={data.attributes.icon}
        alt=""
        width="64"
        height="64"
      />
    )
  }
  <p>
    <strong>{data.attributes.title}</strong>是上古卷轴OL的一本<a href="/book"
      >书籍</a
    >。书中写道：
  </p>
  <hr />
  <Fragment
    set:html={md2html(
      data.attributes.body.replace(/(?<!\n)\n(?!\n)/g, "<br/>")
    )}
  />
</ArticleLayout>
