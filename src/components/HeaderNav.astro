---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE, CDN_URL } from "@/consts";

const menus = [
  {
    href: "/guide",
    title: "攻略",
  },
  {
    href: "/quest",
    title: "任务",
  },
  {
    href: "/build",
    title: "构建",
  },
  // {
  //   href: "/addon",
  //   title: "插件",
  // },
  {
    href: "/set",
    title: "套装",
  },
  {
    href: "/map",
    title: "地图",
  },
  {
    href: "/tool",
    title: "工具",
  },
  {
    href: "/about",
    title: "关于",
  },
];

const moreMenus = [
  {
    href: "/news",
    title: "新闻",
  },
  {
    href: "/chapter",
    title: "章节",
  },
  {
    href: "/dlc",
    title: "DLC",
  },
  {
    href: "/skill",
    title: "技能",
  },
  {
    href: "/faction",
    title: "阵营",
  },
  {
    href: "/race",
    title: "种族",
  },
  {
    href: "/class",
    title: "职业",
  },
  {
    href: "/mundus-stone",
    title: "梦达思之石",
  },
  {
    href: "/worldevent",
    title: "世界事件",
  },
  {
    href: "/currency",
    title: "货币",
  },
  {
    href: "/attribute",
    title: "属性",
  },
  {
    href: "/role",
    title: "角色",
  },
  // {
  //   href: "/article",
  //   title: "未分类文章",
  // },
];

const { pathname } = Astro.url;
const isActive = moreMenus.some((menu) => pathname.startsWith(menu.href));
---

<header
  id="page-top"
  class="px-3 h-12 md:h-20 text-gray-500 md:flex items-center md:px-8"
>
  <div class="flex justify-between items-center">
    <a class="flex items-center flex-shrink-0" href="/">
      <img src={`${CDN_URL}/ico/eso.ico`} alt="" />
      <span class="ml-4 text-2xl text-gray-900 font-bold">{SITE_TITLE}</span>
    </a>
    <label
      class="md:hidden ml-4 bg-transparent border-none cursor-pointer"
      for="fullscreennav-toggle"
      id="toggle-menu"
    >
      <svg viewBox="0 0 28 20" width="24" height="24">
        <rect width="28" height="4" rx="4"></rect>
        <rect y="8" width="28" height="4" rx="4"></rect>
        <rect y="16" width="28" height="4" rx="4"></rect>
      </svg>
    </label>
  </div>
  <nav class="items-center hidden md:flex">
    <ul
      class="flex flex-col md:flex-row md:self-center w-full text-xl md:text-base"
    >
      {
        menus.map(({ href, title }) => (
          <li class="ml-12">
            <HeaderLink href={href}>{title}</HeaderLink>
          </li>
        ))
      }
      <li class="relative ml-12">
        <button
          id="more-menu"
          type="button"
          class:list={[
            {
              "font-bold": isActive,
            },
            "inline-flex leading-5 opacity-60 text-black text-no-underline hover:underline focus:underline whitespace-nowrap",
          ]}
          aria-expanded="false"
        >
          <span>更多</span>
          <svg
            class="text-gray-400 h-5 w-5 group-hover:text-gray-500"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 20 20"
            fill="currentColor"
            aria-hidden="true"
          >
            <path
              fill-rule="evenodd"
              d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z"
              clip-rule="evenodd"></path>
          </svg>
        </button>

        <div
          class="hidden absolute z-10 mt-1 bg-white transform px-2 sm:px-0 lg:left-1/2 lg:ml-0 lg:-translate-x-1/2"
        >
          <div
            class="overflow-hidden rounded-lg shadow-lg ring-1 py-1 ring-black ring-opacity-5"
          >
            {
              moreMenus.map(({ href, title }) => (
                <HeaderLink
                  href={href}
                  class="block px-4 py-2 hover:bg-gray-100 hover:text-gray-900 hover:no-underline"
                >
                  {title}
                </HeaderLink>
              ))
            }
          </div>
        </div>
      </li>
    </ul>
  </nav>

  <script is:inline>
    window.onload = function () {
      const menuIcon = document.querySelector("#toggle-menu");
      menuIcon.addEventListener("click", () => {
        menuIcon.classList.toggle("expanded");
        document.body.classList.toggle("overflow-hidden");
        document.getElementById("page-top")?.classList.toggle("h-screen");
        document.querySelector("#page-top nav")?.classList.toggle("hidden");
        document.querySelector("#area-list")?.classList.toggle("hidden");
        document.querySelector("astro-island")?.classList.toggle("hidden");
        const matches = document.querySelectorAll("astro-island");
        if (matches && matches.length) {
          matches.forEach((elem) => {
            elem?.classList.toggle("hidden");
          });
        }
      });

      const moreMenu = document.querySelector("#more-menu");
      moreMenu.addEventListener("click", (e) => {
        e.stopPropagation();
        document.querySelector("#more-menu + div")?.classList.toggle("hidden");
      });

      window.addEventListener("click", (e) => {
        document.querySelector("#more-menu + div")?.classList.add("hidden");
      });
    };
  </script>
</header>
